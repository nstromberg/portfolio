{"version":3,"sources":["webpack:///./src/components/bio.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/head.tsx","webpack:///./src/components/projectcard.tsx"],"names":["bio","react_default","a","createElement","gatsby_browser_entry","query","render","data","_data$site$siteMetada","site","siteMetadata","description","social","author","email","name","href","github","_109386375","StyledGrid","styled","div","withConfig","displayName","componentId","Index","this","props","siteTitle","title","projects","allMarkdownRemark","edges","layout","head","keywords","map","_ref","node","projectcard","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","StyledNav","nav","StyledFooter","footer","Layout","react__WEBPACK_IMPORTED_MODULE_1___default","className","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Head","_this","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","lang","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","meta","content","property","concat","length","join","_public_static_d_872482878_json__WEBPACK_IMPORTED_MODULE_1__","CardWrapper","CardHeader","header","CardHeading","h1","CardBody","ProjectCard","frontmatter","fields","slug","key","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"0LAkBeA,EAAA,WACb,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,YAgBLC,OAAQ,SAACC,GAA0B,IAAAC,EACOD,EAAKE,KAAKC,aAA1CC,EADyBH,EACzBG,YAAaC,EADYJ,EACZI,OAAQC,EADIL,EACJK,OACrBC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KACf,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAAA,SACGY,EADH,uJAGEd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGa,KAAI,UAAYF,GAAnB,SACAb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGa,KAAMJ,EAAOK,QAAhB,aA7BVV,KAAAW,4FCPJ,IAAMC,EAAaC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,2FASKK,4FACnBnB,OAAA,WAAS,IACCC,EAASmB,KAAKC,MAAdpB,KACFqB,EAAYrB,EAAKE,KAAKC,aAAamB,MACnCC,EAAWvB,EAAKwB,kBAAkBC,MAExC,OACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQJ,MAAOD,GACb3B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAML,MAAM,uBAAuBM,SAAU,CAAC,YAAa,SAAU,aAAc,QAAS,gBAC5FlC,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACgB,EAAD,KACGW,EAASM,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACf,OACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAaD,KAAMA,aAdAE,IAAMC,WA8C5BC,EAAS,+CCpEtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAnD,IAAAyC,EAAA,SAaMW,EAAqBd,IAAMe,cAAc,IAE/C,SAASC,EAATnB,GAA2E,IAAxCoB,EAAwCpB,EAAxCoB,gBAAiBlD,EAAuB8B,EAAvB9B,KAAMF,EAAiBgC,EAAjBhC,MAAOC,EAAU+B,EAAV/B,OACzDoD,EAAYnD,EACdA,EAAKA,KACLkD,EAAgBpD,IAAUoD,EAAgBpD,GAAOE,KAErD,OACEyC,EAAA9C,EAAAC,cAAC6C,EAAA9C,EAAMyD,SAAP,KACGD,GAAapD,EAAOoD,IACnBA,GAAaV,EAAA9C,EAAAC,cAAA,qCAKrB,IAAM2C,EAAc,SAAAnB,GAAS,IACnBpB,EAAkCoB,EAAlCpB,KAAMF,EAA4BsB,EAA5BtB,MAAOC,EAAqBqB,EAArBrB,OAAQsD,EAAajC,EAAbiC,SAE7B,OACEZ,EAAA9C,EAAAC,cAACmD,EAAmBO,SAApB,KACG,SAAAJ,GAAe,OACdT,EAAA9C,EAAAC,cAACqD,EAAD,CACEjD,KAAMA,EACNF,MAAOA,EACPC,OAAQA,GAAUsD,EAClBH,gBAAiBA,OA6B3BX,EAAYgB,UAAY,CACtBvD,KAAMwD,IAAUC,OAChB3D,MAAO0D,IAAUE,OAAOC,WACxB5D,OAAQyD,IAAUI,KAClBP,SAAUG,IAAUI,2BCvEtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8FCKzCK,EAAmB,SAAApC,GAAiC,IAA9BqC,EAA8BrC,EAA9BqC,SAAUC,EAAoBtC,EAApBsC,cACpC,OAAKA,EAGEnC,IAAMrC,cAAcyE,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUiB,MAAM,CACxBC,SAAUlB,IAAUE,OAAOC,aAC1BA,YAGUO,oIClBTS,EAAY9D,IAAO+D,IAAV7D,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,0GAiBTgE,EAAehE,IAAOiE,OAAV/D,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,0BAQGkE,4FACnBhF,OAAA,WAAS,IACCsD,EAAalC,KAAKC,MAAlBiC,SAER,OACE2B,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAyD,SAAA,KACE4B,EAAArF,EAAAC,cAAC+E,EAAD,CAAWM,UAAU,cACnBD,EAAArF,EAAAC,cAAA,UACEoF,EAAArF,EAAAC,cAAA,UACEoF,EAAArF,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAE,KAAR,MAEFH,EAAArF,EAAAC,cAAA,UACEoF,EAAArF,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAE,SAAR,eAEFH,EAAArF,EAAAC,cAAA,UACEoF,EAAArF,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAE,UAAR,YAINH,EAAArF,EAAAC,cAAA,OAAKqF,UAAU,WACZ5B,GAEH2B,EAAArF,EAAAC,cAACiF,EAAD,CAAcI,UAAU,UAAxB,aAEG,IACDD,EAAArF,EAAAC,cAAA,KAAGa,KAAK,wBAAR,UACC,IAJH,MAMG,IACDuE,EAAArF,EAAAC,cAAA,KAAGa,KAAK,8BAAR,oBA7B0BwB,IAAMC,qJCNrBkD,4FACnBrF,OAAA,WAAS,IAAAsF,EAAAlE,KACP,OACEmE,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEzF,MAAK,YAaLC,OAAQ,SAACC,GACP,IAAMwF,EAAkBH,EAAKjE,MAAMhB,aAAeJ,EAAKE,KAAKC,aAAaC,YACnEqF,EAAOJ,EAAKjE,MAAMqE,MAAQ,KAC1BnE,EAAQ+D,EAAKjE,MAAME,MACnBM,EAAWyD,EAAKjE,MAAMQ,UAAY,GACxC,OACE0D,EAAA3F,EAAAC,cAAC8F,EAAA/F,EAAD,CACEgG,eAAgB,CACdF,QAEFnE,MAAOA,EACPsE,cAAa,QAAU5F,EAAKE,KAAKC,aAAamB,MAC9CuE,KAAM,CACJ,CACErF,KAAI,cACJsF,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASxE,GAEX,CACEyE,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,YAETE,OACApE,EAASqE,OAAS,EACd,CACAzF,KAAI,WACJsF,QAASlE,EAASsE,KAAT,OAET,OAjDdlG,KAAAmG,QAH4BlE,IAAMC,4TCLlCkE,EAAcvF,IAAOC,IAAVC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,8KAUXwF,EAAaxF,IAAOyF,OAAVvF,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGJ,CAAH,2CAKV0F,EAAc1F,IAAO2F,GAAVzF,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,wDAMX4F,EAAW5F,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,2CAKO6F,4FACnB3G,OAAA,WAAS,IACCgC,EAASZ,KAAKC,MAAdW,KACFT,EAAQS,EAAK4E,YAAYrF,OAASS,EAAK6E,OAAOC,KACpD,OACE7B,EAAArF,EAAAC,cAACwG,EAAD,CAAaU,IAAK/E,EAAK6E,OAAOC,MAC5B7B,EAAArF,EAAAC,cAAC2G,EAAD,KACEvB,EAAArF,EAAAC,cAACyG,EAAD,KACErB,EAAArF,EAAAC,cAACsF,EAAA,EAAD,CAAMC,GAAIpD,EAAK6E,OAAOC,MAAOvF,KAGjC0D,EAAArF,EAAAC,cAAC6G,EAAD,KACEzB,EAAArF,EAAAC,cAAA,aAAQmC,EAAK4E,YAAYI,MACzB/B,EAAArF,EAAAC,cAAA,KAAGoH,wBAAyB,CAAEC,OAAQlF,EAAKmF,iBAbZjF,IAAMC","file":"component---src-pages-index-tsx-bc09d2b1367874cbcc06.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      description: string\n      social: {\n        github: string\n      }\n      author: {\n        name: string\n        email: string\n      }\n    }\n  }\n}\n\nexport default function () {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              description\n              social {\n                github\n              }\n              author {\n                name\n                email\n              }\n            }\n          }\n        }\n      `}\n      render={(data: StaticQueryData) => {\n        const { description, social, author } = data.site.siteMetadata;\n        const { email, name } = author;\n        return (\n          <div>\n            <h1>{description}</h1>\n            <p>\n              {name} is a Computer Science and Math double major at the University of Kentucky\n              focused on ML/AI and their applications to problem solving in all fields.\n              <br />\n              <a href={`mailto:${email}`}>Email</a>\n              <br />\n              <a href={social.github}>Github</a>\n            </p>\n          </div>\n        );\n      }}\n    />\n  )\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Head from '../components/head';\nimport Bio from '../components/bio';\nimport ProjectCard from '../components/projectcard';\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst StyledGrid = styled.div`\n{\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 10px;\n  padding-bottom: 36px;\n}\n`;\n\nexport default class Index extends React.Component<Props> {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const projects = data.allMarkdownRemark.edges\n\n    return (\n      <Layout title={siteTitle}>\n        <Head title=\"Overview of projects\" keywords={['portfolio', 'gatsby', 'javascript', 'react', 'typescript']} />\n        <Bio />\n        <article>\n          <StyledGrid>\n            {projects.map(({ node }) => {\n              return (\n                <ProjectCard node={node} />\n              )\n            })}\n          </StyledGrid>\n        </article>\n      </Layout>\n    )\n  }\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        fields: {\n          slug: string\n        }\n        frontmatter: {\n          date: string\n          title: string\n        }\n      }\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledNav = styled.nav`\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    display: inline-block;\n    margin: 16px;\n\n    a {\n      background: none;\n    }\n  }\n`;\n\nconst StyledFooter = styled.footer`\n  padding-bottom: 36px;\n`;\n\ninterface Props {\n  readonly title?: string\n}\n\nexport default class Layout extends React.Component<Props> {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <>\n        <StyledNav className='navigation'>\n          <ul>\n            <li>\n              <Link to={`/`}>&plusmn;</Link>\n            </li>\n            <li>\n              <Link to={`/tags`}>Categories</Link>\n            </li>\n            <li>\n              <Link to={`/about`}>About</Link>\n            </li>\n          </ul>\n        </StyledNav>\n        <div className='content'>\n          {children}\n        </div>\n        <StyledFooter className='footer'>\n          Built with\n          {' '}\n          <a href='https://gatsbyjs.org'>Gatsby</a>\n          {' '}\n          and\n          {' '}\n          <a href='https://typescriptlang.org'>Typescript</a>\n        </StyledFooter>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      author: {\n        name: string\n      }\n    }\n  }\n}\n\ninterface Props {\n  readonly title: string\n  readonly description?: string\n  readonly lang?: string\n  readonly keywords?: string[]\n}\n\nexport default class Head extends React.Component<Props> {\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                title\n                description\n                author {\n                  name\n                }\n              }\n            }\n          }\n        `}\n        render={(data: StaticQueryData) => {\n          const metaDescription = this.props.description || data.site.siteMetadata.description\n          const lang = this.props.lang || 'en'\n          const title = this.props.title\n          const keywords = this.props.keywords || []\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n              ].concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : [],\n              )}\n            />\n          )\n        }}\n      />\n    )\n  }\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\ninterface Props {\n  readonly node: Node\n}\n\ninterface Node {\n  fields: {\n    slug: string\n  }\n  frontmatter: {\n    title: string\n    date: string\n  }\n  excerpt: string\n}\n\nconst CardWrapper = styled.div`\n  overflow: hidden;\n  padding: 0 0 32px;\n  margin: 48px auto 0;\n  width: 300px;\n  font-family: sans-serif;\n  box-shadow: 0 0 20px rgba(0, 0, 0, .05), 0 0px 40px rgba(0, 0, 0, .08);\n  border-radius: 5px;\n`\n\nconst CardHeader = styled.header`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst CardHeading = styled.h1`\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n`\n\nconst CardBody = styled.div`\n  padding-right: 32px;\n  padding-left: 32px;\n`\n\nexport default class ProjectCard extends React.Component<Props> {\n  render() {\n    const { node } = this.props;\n    const title = node.frontmatter.title || node.fields.slug;\n    return (\n      <CardWrapper key={node.fields.slug} >\n        <CardHeading>\n          <CardHeader>\n            <Link to={node.fields.slug}>{title}</Link>\n          </CardHeader>\n        </CardHeading>\n        <CardBody>\n          <small>{node.frontmatter.date}</small>\n          <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n        </CardBody>\n      </CardWrapper>\n    );\n  }\n}\n"],"sourceRoot":""}