{"version":3,"sources":["webpack:///./src/templates/tag.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/link.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/head.tsx","webpack:///./src/components/projectcard.tsx"],"names":["TagTemplate","render","_this$props","this","props","pageContext","data","tag","siteTitle","site","siteMetadata","title","projects","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_head__WEBPACK_IMPORTED_MODULE_6__","keywords","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","variant","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","container","direction","justify","alignItems","spacing","map","_ref","node","item","_components_projectcard__WEBPACK_IMPORTED_MODULE_7__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Link","forwardRef","ref","_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_2__","Object","assign","component","GatsbyLink","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","shape","pathname","Layout","classes","react__WEBPACK_IMPORTED_MODULE_3___default","className","root","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","position","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_link__WEBPACK_IMPORTED_MODULE_4__","color","link","to","align","name","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","main","footer","href","withStyles","theme","createStyles","flexGrow","marginRight","margin","Head","_this","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","description","lang","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","meta","content","property","concat","length","join","_public_static_d_872482878_json__WEBPACK_IMPORTED_MODULE_1__","ProjectCard","frontmatter","fields","slug","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_4__","card","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6__","_link__WEBPACK_IMPORTED_MODULE_7__","date","paragraph","dangerouslySetInnerHTML","__html","excerpt","minWidth","marginBottom"],"mappings":"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","file":"component---src-templates-tag-tsx-61509536698281106022.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Box, Typography, Grid } from '@material-ui/core';\r\n\r\nimport Layout from '../components/layout';\r\nimport Head from '../components/head';\r\nimport ProjectCard from '../components/projectcard';\r\n\r\ninterface Props {\r\n  readonly data: PageQueryData\r\n  readonly pageContext: {\r\n    tag: string\r\n  }\r\n}\r\n\r\nexport default class TagTemplate extends React.Component<Props> {\r\n  render() {\r\n    const { pageContext, data } = this.props\r\n    const { tag } = pageContext\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const projects = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n      <Layout title={siteTitle}>\r\n        <Head\r\n          title={'Projects tagged \"${tag}\"'}\r\n          keywords={['portfolio', 'gatsby', 'typescript', 'react', tag]}\r\n        />\r\n        <Box>\r\n          <Typography variant='h3'>\r\n            Projects tagged {tag}\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            spacing={4}\r\n          >\r\n            {projects.map(({ node }) => {\r\n              return (\r\n                <Grid item>\r\n                  <ProjectCard node={node} />\r\n                </Grid>\r\n              )\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\ninterface PageQueryData {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    totalCount: number\r\n    edges: {\r\n      node: {\r\n        excerpt: string\r\n        fields: {\r\n          slug: string\r\n        }\r\n        frontmatter: {\r\n          date: string\r\n          title: string\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 1000, filter: {frontmatter: {tags: {in: [$tag]}}}) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport { Link as GatsbyLink } from 'gatsby';\r\n\r\nconst Link = React.forwardRef(function Link(props, ref) {\r\n  return <MuiLink component={GatsbyLink} ref={ref} {...props} />;\r\n});\r\n\r\nexport default Link;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\nimport Link from './link';\r\nimport { withStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Paper, Typography, Toolbar, AppBar } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  readonly title?: string,\r\n  readonly classes: {\r\n    root: string,\r\n    link: string,\r\n    name: string,\r\n    footer: string,\r\n    main: string,\r\n  }\r\n}\r\n\r\nconst useStyles = (theme: Theme) => (\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    name: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      margin: theme.spacing(4),\r\n    },\r\n    main: {\r\n      margin: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nclass Layout extends React.Component<Props> {\r\n  render() {\r\n    const { children, classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position='sticky'>\r\n          <Toolbar>\r\n            <Typography variant='h6'>\r\n              <Link color='inherit' className={classes.link} to={`/`}>&plusmn;</Link>\r\n              <Link color='inherit' className={classes.link} to={`/tags`}>Categories</Link>\r\n              <Link color='inherit' className={classes.link} to={`/about`}>About</Link>\r\n            </Typography>\r\n            <Typography variant='h6' align='right' className={classes.name}>\r\n              {'Nathan Stromberg'}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Paper className={classes.main}>\r\n          {children}\r\n        </Paper>\r\n        <Typography variant='body2' color='textSecondary' align='center' className={classes.footer}>\r\n          {'Built with love using '}\r\n          <Link color='inherit' href='https://gatsbyjs.com/'>\r\n            Gatsby\r\n          </Link>\r\n          {' and '}\r\n          <Link color='inherit' href='https://typescriptlang.org/'>\r\n            Typescript\r\n          </Link>\r\n        </Typography>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Layout);\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\ntype StaticQueryData = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n      description: string\r\n      author: {\r\n        name: string\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  readonly title: string\r\n  readonly description?: string\r\n  readonly lang?: string\r\n  readonly keywords?: string[]\r\n}\r\n\r\nexport default class Head extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <StaticQuery\r\n        query={graphql`\r\n          query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n                description\r\n                author {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `}\r\n        render={(data: StaticQueryData) => {\r\n          const metaDescription = this.props.description || data.site.siteMetadata.description\r\n          const lang = this.props.lang || 'en'\r\n          const title = this.props.title\r\n          const keywords = this.props.keywords || []\r\n          return (\r\n            <Helmet\r\n              htmlAttributes={{\r\n                lang,\r\n              }}\r\n              title={title}\r\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n              meta={[\r\n                {\r\n                  name: `description`,\r\n                  content: metaDescription,\r\n                },\r\n                {\r\n                  property: `og:title`,\r\n                  content: title,\r\n                },\r\n                {\r\n                  property: `og:description`,\r\n                  content: metaDescription,\r\n                },\r\n                {\r\n                  property: `og:type`,\r\n                  content: `website`,\r\n                },\r\n              ].concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                    name: `keywords`,\r\n                    content: keywords.join(`, `),\r\n                  }\r\n                  : [],\r\n              )}\r\n            />\r\n          )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from './link';\r\n\r\ninterface Props {\r\n  readonly node: Node,\r\n  readonly classes: {\r\n    card: string,\r\n    date: string,\r\n  }\r\n}\r\n\r\ninterface Node {\r\n  fields: {\r\n    slug: string\r\n  }\r\n  frontmatter: {\r\n    title: string\r\n    date: string\r\n  }\r\n  excerpt: string\r\n}\r\n\r\nconst useStyles = (theme: Theme) => (\r\n  createStyles({\r\n    card: {\r\n      minWidth: 250,\r\n    },\r\n    date: {\r\n      marginBottom: theme.spacing(2),\r\n    }\r\n  })\r\n);\r\n\r\nclass ProjectCard extends React.Component<Props> {\r\n  render() {\r\n    const { node, classes } = this.props;\r\n    const title = node.frontmatter.title || node.fields.slug;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant='h6' component='h2'>\r\n            <Link to={node.fields.slug} color='inherit'>{title}</Link>\r\n          </Typography>\r\n          <Typography color='textSecondary' className={classes.date}>{node.frontmatter.date}</Typography>\r\n          <Typography paragraph dangerouslySetInnerHTML={{ __html: node.excerpt }} />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ProjectCard);\r\n"],"sourceRoot":""}