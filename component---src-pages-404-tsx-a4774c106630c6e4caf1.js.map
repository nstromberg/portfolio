{"version":3,"sources":["webpack:///./src/pages/404.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/head.tsx"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_head__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","StyledNav","styled","nav","withConfig","displayName","componentId","StyledFooter","footer","Layout","className","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","href","Head","_this","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","description","lang","keywords","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","meta","name","content","property","concat","length","join","_public_static_d_872482878_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-404-tsx-a4774c106630c6e4caf1.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nexport default class NotFoundPage extends React.Component<Props> {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout title={siteTitle}>\n        <Head title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>Oh no, that doesn&#39;t exist...</p>\n      </Layout>\n    )\n  }\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledNav = styled.nav`\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    display: inline-block;\n    margin: 16px;\n\n    a {\n      background: none;\n    }\n  }\n`;\n\nconst StyledFooter = styled.footer`\n  padding-bottom: 36px;\n`;\n\ninterface Props {\n  readonly title?: string\n}\n\nexport default class Layout extends React.Component<Props> {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <>\n        <StyledNav className='navigation'>\n          <ul>\n            <li>\n              <Link to={`/`}>&plusmn;</Link>\n            </li>\n            <li>\n              <Link to={`/tags`}>Categories</Link>\n            </li>\n            <li>\n              <Link to={`/about`}>About</Link>\n            </li>\n          </ul>\n        </StyledNav>\n        <div className='content'>\n          {children}\n        </div>\n        <StyledFooter className='footer'>\n          Built with\n          {' '}\n          <a href='https://gatsbyjs.org'>Gatsby</a>\n          {' '}\n          and\n          {' '}\n          <a href='https://typescriptlang.org'>Typescript</a>\n        </StyledFooter>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      author: {\n        name: string\n      }\n    }\n  }\n}\n\ninterface Props {\n  readonly title: string\n  readonly description?: string\n  readonly lang?: string\n  readonly keywords?: string[]\n}\n\nexport default class Head extends React.Component<Props> {\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                title\n                description\n                author {\n                  name\n                }\n              }\n            }\n          }\n        `}\n        render={(data: StaticQueryData) => {\n          const metaDescription = this.props.description || data.site.siteMetadata.description\n          const lang = this.props.lang || 'en'\n          const title = this.props.title\n          const keywords = this.props.keywords || []\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n              ].concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : [],\n              )}\n            />\n          )\n        }}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}