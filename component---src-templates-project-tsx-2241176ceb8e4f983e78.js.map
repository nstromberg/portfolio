{"version":3,"sources":["webpack:///./src/templates/project.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.tsx","webpack:///./src/components/head.tsx"],"names":["StyledUl","styled","withConfig","displayName","componentId","ProjectTemplate","render","project","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_head__WEBPACK_IMPORTED_MODULE_5__","frontmatter","description","excerpt","date","className","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","StyledNav","nav","StyledFooter","footer","Layout","href","Head","_this","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","lang","keywords","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","meta","name","content","property","concat","length","join","_public_static_d_872482878_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"uPAeMA,EAAWC,YAAO,MAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGH,CAAH,wFASOI,4FACnBC,OAAA,WACE,IAAMC,EAAUC,KAAKC,MAAMC,KAAKC,eAC1BC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7CC,EAGoBR,KAAKC,MAAMQ,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAElB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQR,MAAOH,GACbQ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMT,MAAOR,EAAQkB,YAAYV,MAAOW,YAAanB,EAAQoB,UAC7DP,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKf,EAAQkB,YAAYV,OACzBK,EAAAC,EAAAC,cAAA,SAAIf,EAAQkB,YAAYG,OAE1BR,EAAAC,EAAAC,cAAA,OAAKO,UAAW,gBACdT,EAAAC,EAAAC,cAAA,OAAKQ,wBAAyB,CAAEC,OAAQxB,EAAQyB,QAChDZ,EAAAC,EAAAC,cAACtB,EAAD,KACGkB,GACCE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAIhB,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACKnB,EAASO,YAAYV,QAI7BI,GACCC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAIf,EAAKgB,OAAOC,KAAMC,IAAI,QAC7BlB,EAAKM,YAAYV,MADpB,eA1B2BuB,IAAMC,WAwDtCC,EAAS,+CChFtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAA9B,IAAAoB,EAAA,SAaMW,EAAqBd,IAAMe,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiB9C,EAAuB6C,EAAvB7C,KAAM+C,EAAiBF,EAAjBE,MAAOnD,EAAUiD,EAAVjD,OACzDoD,EAAYhD,EACdA,EAAKA,KACL8C,EAAgBC,IAAUD,EAAgBC,GAAO/C,KAErD,OACEoC,EAAAzB,EAAAC,cAACwB,EAAAzB,EAAMsC,SAAP,KACGD,GAAapD,EAAOoD,IACnBA,GAAaZ,EAAAzB,EAAAC,cAAA,qCAKrB,IAAMsB,EAAc,SAAAnC,GAAS,IACnBC,EAAkCD,EAAlCC,KAAM+C,EAA4BhD,EAA5BgD,MAAOnD,EAAqBG,EAArBH,OAAQsD,EAAanD,EAAbmD,SAE7B,OACEd,EAAAzB,EAAAC,cAAC8B,EAAmBS,SAApB,KACG,SAAAL,GAAe,OACdV,EAAAzB,EAAAC,cAACgC,EAAD,CACE5C,KAAMA,EACN+C,MAAOA,EACPnD,OAAQA,GAAUsD,EAClBJ,gBAAiBA,OA6B3BZ,EAAYkB,UAAY,CACtBpD,KAAMqD,IAAUC,OAChBP,MAAOM,IAAUE,OAAOC,WACxB5D,OAAQyD,IAAUI,KAClBP,SAAUG,IAAUI,2BCvEtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8FCKzCK,EAAmB,SAAAlB,GAAiC,IAA9BmB,EAA8BnB,EAA9BmB,SAAUC,EAAoBpB,EAApBoB,cACpC,OAAKA,EAGErC,IAAMhB,cAAcsD,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUiB,MAAM,CACxBC,SAAUlB,IAAUE,OAAOC,aAC1BA,YAGUO,oIClBTS,EAAYjF,IAAOkF,IAAVjF,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGH,CAAH,0GAiBTmF,EAAenF,IAAOoF,OAAVnF,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGH,CAAH,0BAQGqF,4FACnBhF,OAAA,WAAS,IACCsD,EAAapD,KAAKC,MAAlBmD,SAER,OACExC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsC,SAAA,KACEvC,EAAAC,EAAAC,cAAC4D,EAAD,CAAWrD,UAAU,cACnBT,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAE,KAAR,MAEFd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAE,SAAR,eAEFd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAE,UAAR,YAINd,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WACZ+B,GAEHxC,EAAAC,EAAAC,cAAC8D,EAAD,CAAcvD,UAAU,UAAxB,aAEG,IACDT,EAAAC,EAAAC,cAAA,KAAGiE,KAAK,wBAAR,UACC,IAJH,MAMG,IACDnE,EAAAC,EAAAC,cAAA,KAAGiE,KAAK,8BAAR,oBA7B0BjD,IAAMC,qJCNrBiD,4FACnBlF,OAAA,WAAS,IAAAmF,EAAAjF,KACP,OACEkF,EAAArE,EAAAC,cAACqE,EAAA,EAAD,CACElC,MAAK,YAaLnD,OAAQ,SAACI,GACP,IAAMkF,EAAkBH,EAAKhF,MAAMiB,aAAehB,EAAKG,KAAKC,aAAaY,YACnEmE,EAAOJ,EAAKhF,MAAMoF,MAAQ,KAC1B9E,EAAQ0E,EAAKhF,MAAMM,MACnB+E,EAAWL,EAAKhF,MAAMqF,UAAY,GACxC,OACEJ,EAAArE,EAAAC,cAACyE,EAAA1E,EAAD,CACE2E,eAAgB,CACdH,QAEF9E,MAAOA,EACPkF,cAAa,QAAUvF,EAAKG,KAAKC,aAAaC,MAC9CmF,KAAM,CACJ,CACEC,KAAI,cACJC,QAASR,GAEX,CACES,SAAQ,WACRD,QAASrF,GAEX,CACEsF,SAAQ,iBACRD,QAASR,GAEX,CACES,SAAQ,UACRD,QAAO,YAETE,OACAR,EAASS,OAAS,EACd,CACAJ,KAAI,WACJC,QAASN,EAASU,KAAT,OAET,OAjDd9F,KAAA+F,QAH4BnE,IAAMC","file":"component---src-templates-project-tsx-2241176ceb8e4f983e78.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\n\ninterface Props {\n  readonly data: PageQueryData\n  readonly pageContext: {\n    previous?: any\n    next?: any\n  }\n}\n\nconst StyledUl = styled('ul')`\n  list-style-type: none;\n\n  li::before {\n    content: '' !important;\n    padding-right: 0 !important;\n  }\n`\n\nexport default class ProjectTemplate extends React.Component<Props> {\n  render() {\n    const project = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout title={siteTitle}>\n        <Head title={project.frontmatter.title} description={project.excerpt} />\n        <article>\n          <header>\n            <h1>{project.frontmatter.title}</h1>\n            <p>{project.frontmatter.date}</p>\n          </header>\n          <div className={'page-content'}>\n            <div dangerouslySetInnerHTML={{ __html: project.html }} />\n            <StyledUl>\n              {previous && (\n                <li>\n                  <Link to={previous.fields.slug} rel='prev'>\n                    ← {previous.frontmatter.title}\n                  </Link>\n                </li>\n              )}\n              {next && (\n                <li>\n                  <Link to={next.fields.slug} rel='next'>\n                    {next.frontmatter.title} →\n                  </Link>\n                </li>\n              )}\n            </StyledUl>\n          </div>\n        </article>\n      </Layout>\n    )\n  }\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  markdownRemark: {\n    id?: string\n    excerpt?: string\n    html: string\n    frontmatter: {\n      title: string\n      date: string\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 2500)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledNav = styled.nav`\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    display: inline-block;\n    margin: 16px;\n\n    a {\n      background: none;\n    }\n  }\n`;\n\nconst StyledFooter = styled.footer`\n  padding-bottom: 36px;\n`;\n\ninterface Props {\n  readonly title?: string\n}\n\nexport default class Layout extends React.Component<Props> {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <>\n        <StyledNav className='navigation'>\n          <ul>\n            <li>\n              <Link to={`/`}>&plusmn;</Link>\n            </li>\n            <li>\n              <Link to={`/tags`}>Categories</Link>\n            </li>\n            <li>\n              <Link to={`/about`}>About</Link>\n            </li>\n          </ul>\n        </StyledNav>\n        <div className='content'>\n          {children}\n        </div>\n        <StyledFooter className='footer'>\n          Built with\n          {' '}\n          <a href='https://gatsbyjs.org'>Gatsby</a>\n          {' '}\n          and\n          {' '}\n          <a href='https://typescriptlang.org'>Typescript</a>\n        </StyledFooter>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ntype StaticQueryData = {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      author: {\n        name: string\n      }\n    }\n  }\n}\n\ninterface Props {\n  readonly title: string\n  readonly description?: string\n  readonly lang?: string\n  readonly keywords?: string[]\n}\n\nexport default class Head extends React.Component<Props> {\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query {\n            site {\n              siteMetadata {\n                title\n                description\n                author {\n                  name\n                }\n              }\n            }\n          }\n        `}\n        render={(data: StaticQueryData) => {\n          const metaDescription = this.props.description || data.site.siteMetadata.description\n          const lang = this.props.lang || 'en'\n          const title = this.props.title\n          const keywords = this.props.keywords || []\n          return (\n            <Helmet\n              htmlAttributes={{\n                lang,\n              }}\n              title={title}\n              titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n              meta={[\n                {\n                  name: `description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:title`,\n                  content: title,\n                },\n                {\n                  property: `og:description`,\n                  content: metaDescription,\n                },\n                {\n                  property: `og:type`,\n                  content: `website`,\n                },\n              ].concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : [],\n              )}\n            />\n          )\n        }}\n      />\n    )\n  }\n}\n"],"sourceRoot":""}